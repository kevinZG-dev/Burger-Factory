/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.view;

import java.awt.Color;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import project.model.dao.ItemDAOimpl;
import project.model.entity.Item;
import java.awt.Image;

/**
 * Classe ItemAdd_JDialog qui hérite de la classe JDialog 
 * qui permet l'affichage d'une jdialog pour ajouter
 * un nouvel item dans l'interface employé
 * @author maximeattal
 */
public class ItemAdd_JDialog extends javax.swing.JDialog {

    private final ItemDAOimpl itDAO = new ItemDAOimpl();
    private String chemin;

    /**
     * COnstructeur qui recooit la JFrame parent en parametre, employee_JFrame
     * et qui init tout
     * @param parent
     * @param modal
     */
    public ItemAdd_JDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setSize(415, 480);
        this.setTitle("Burger Factory");
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setWrapStyleWord(true);
        chemin = "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jButtonConfirm = new javax.swing.JButton();
        jLabelSubTitle1 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jLabelPrice = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jComboBoxType = new javax.swing.JComboBox();
        jButtonCancel = new javax.swing.JButton();
        jLabelType1 = new javax.swing.JLabel();
        jPanel_show_item = new javax.swing.JPanel();
        jLabel_image = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton_uploadfile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(380, 412));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelTitle.setText("Add item :");
        getContentPane().add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 20, -1, -1));

        jButtonConfirm.setText("Confirm");
        jButtonConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConfirmMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonConfirmMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonConfirmMouseExited(evt);
            }
        });
        jButtonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, 45));

        jLabelSubTitle1.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jLabelSubTitle1.setText("All spaces must be filled unless described.");
        getContentPane().add(jLabelSubTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 45, -1, -1));
        getContentPane().add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 79, 160, -1));
        getContentPane().add(jTextFieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 105, 160, -1));

        jLabelPrice.setText("Price :");
        getContentPane().add(jLabelPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        jLabelName.setText("Name :");
        getContentPane().add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 80, -1, -1));

        jLabelDescription.setText("Description :");
        getContentPane().add(jLabelDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDescription);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 170, 60));

        jComboBoxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "burger", "topping", "drink", "dessert" }));
        getContentPane().add(jComboBoxType, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 210, 133, -1));

        jButtonCancel.setText("Cancel");
        jButtonCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseExited(evt);
            }
        });
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 80, 43));

        jLabelType1.setText("Type :");
        getContentPane().add(jLabelType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 213, -1, -1));

        jPanel_show_item.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_show_item.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jPanel_show_item.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel_show_item.add(jLabel_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 90, 90));

        getContentPane().add(jPanel_show_item, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 100, 100));

        jLabel1.setText("Picture :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 240, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jButton_uploadfile.setText("Upload a file");
        jButton_uploadfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_uploadfileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_uploadfileMouseExited(evt);
            }
        });
        jButton_uploadfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_uploadfileActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_uploadfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 110, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action when the 'Confirm' button is pushed, it will add an item in the
     * database.
     *
     * @param evt
     */
    private void jButtonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmActionPerformed
        try {
            //Creating an Item object
            Item newItem = new Item();

            //Setting all its attribut by getting the element from the jTextFields:
            newItem.setName(jTextFieldName.getText());
            newItem.setPrice(Double.parseDouble(jTextFieldPrice.getText()));
            newItem.setDescription(jTextAreaDescription.getText());
            newItem.setType((String) jComboBoxType.getSelectedItem());
            newItem.setBulkPrice(0);
            newItem.setBulkQuantity(0);
            //Call the function that add an item in the database
            itDAO.add(newItem, chemin);

            //Refresh the List of items and the text fields
            jTextFieldName.setText("");
            jTextFieldPrice.setText("");
            jTextAreaDescription.setText("");
            JOptionPane.showMessageDialog(null,"The item '"+newItem.getName()+ "' has been added");

            try {
                //Close the employee interface
                this.dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error : call of employee_Jframe in ItemAdd_JFrame");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "2 possible errors :\n"
                    + "1- You must filled the name and the price\n"
                    + "2- Decimal numbers have to be separeted by a '.' and not ','\n");
        }
    }//GEN-LAST:event_jButtonConfirmActionPerformed

    /**
     * Action when the 'Cancel' button is pushed, it will close the jDialog
     * pane.
     *
     * @param evt
     */
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        try {
            //Close the jDialog pane:
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : leaving of ItemAdd_Jframe in ItemAdd_JFrame/ButtonCancel.");
        }
    }//GEN-LAST:event_jButtonCancelActionPerformed


    private void jButtonConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmMouseClicked
        jButtonConfirm.setForeground(new Color(102, 255, 51));
    }//GEN-LAST:event_jButtonConfirmMouseClicked

    private void jButtonConfirmMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmMouseEntered
        jButtonConfirm.setForeground(new Color(153, 255, 153));
    }//GEN-LAST:event_jButtonConfirmMouseEntered

    private void jButtonConfirmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmMouseExited
        jButtonConfirm.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButtonConfirmMouseExited

    private void jButtonCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseClicked
        jButtonCancel.setBackground(new Color(255, 51, 51));
    }//GEN-LAST:event_jButtonCancelMouseClicked

    private void jButtonCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseEntered
        jButtonCancel.setForeground(new Color(255, 153, 153));
    }//GEN-LAST:event_jButtonCancelMouseEntered

    private void jButtonCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseExited
        jButtonCancel.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButtonCancelMouseExited

    private void jButton_uploadfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_uploadfileActionPerformed
        //Instancie un objet jFileChooser pour parcourir et uploader une image 
        //Et on instancie un filtre pour n'avoir que des images, ici au format png, jpg, et gif
        JFileChooser fileChosen = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image : jpg, png, gif", "jpg", "png", "gif");

        fileChosen.setCurrentDirectory(new File("C:\\Users\\zk942\\Documents\\GitHub\\Projet-Java\\Java-Project\\src\\images"));
        //On désactive les filtres par défaut
        //Et on ajoute notre filtre
        fileChosen.setAcceptAllFileFilterUsed(false);
        fileChosen.addChoosableFileFilter(filter);

        //On recupere dans result le int de si un fichier a été choisi
        int result = fileChosen.showSaveDialog(null);
        //Si un fichier a été choisi
        if (result == JFileChooser.APPROVE_OPTION) {

            //On initialise un objet File qui récupere le fichier choisi
            File selectedFile = fileChosen.getSelectedFile();
            //On récup en string le chemin du file choisi 
            chemin = selectedFile.getAbsolutePath();
            //On instancie une imageicon en lui envoyant l'image d'une nouvelle imageicon avec les dimension voulu limité par le jlabel
            ImageIcon myImage = new ImageIcon(new ImageIcon(chemin).getImage().getScaledInstance(jLabel_image.getWidth(), jLabel_image.getHeight(), Image.SCALE_SMOOTH));
            //Enfin on recupere dans une nouvelle image icon, l'image temp redimensionné
            //ImageIcon newImageIcon = new ImageIcon(img_temp2);
            jLabel_image.setIcon(myImage); // On affiche sur le label 
        } else {
            JOptionPane.showMessageDialog(null, "Vous n'avez choisi aucune image");
        }


    }//GEN-LAST:event_jButton_uploadfileActionPerformed

    private void jButton_uploadfileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_uploadfileMouseEntered
        jButton_uploadfile.setForeground(new Color(255, 230, 153));
    }//GEN-LAST:event_jButton_uploadfileMouseEntered

    private void jButton_uploadfileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_uploadfileMouseExited
        jButton_uploadfile.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton_uploadfileMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemAdd_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemAdd_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemAdd_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemAdd_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ItemAdd_JDialog dialog = new ItemAdd_JDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonConfirm;
    private javax.swing.JButton jButton_uploadfile;
    private javax.swing.JComboBox jComboBoxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelSubTitle1;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelType1;
    private javax.swing.JLabel jLabel_image;
    private javax.swing.JPanel jPanel_show_item;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPrice;
    // End of variables declaration//GEN-END:variables
}
