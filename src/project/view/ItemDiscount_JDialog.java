/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.view;

import java.awt.Color;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Image;
import project.model.dao.ItemDAOimpl;


/**
 * Classe ItemDiscount_JDialog qui herite de la classe JDialog
 * et qui permet l'affichage de la fenêtre pour modifier 
 * un item
 * @author Kévin
 */
public class ItemDiscount_JDialog extends javax.swing.JDialog {

    private static String idItem;
    private static String name;//Nom de l'item a edit
    private static ImageIcon picture;//Image actuel de l'item
    private boolean retry;//boolean pour relancer la page discount si erreur
    private final ItemDAOimpl itDAO = new ItemDAOimpl();
    private String chemin;

    /**
     * Constructeur qui prend en paramètre sa JFrame parent (Employee_JFrame)
     * et egalement l'id de l'objet a modifier, son nom, et son image
     *
     * @param parent
     * @param modal
     * @param id
     */
    public ItemDiscount_JDialog(java.awt.Frame parent, boolean modal, String id, String name, ImageIcon picture) {
        super(parent, modal);
        initComponents();
        this.setTitle("Burger Factory");
        this.setSize(400, 460);
        chemin = "";
        idItem = id;
        this.name = name;//Recoit le nom de l'item a modifier
        this.picture = picture;
        jLabel_image.setIcon(this.picture);
        //J'affiche le nom 
        jLabel_whichItem.setText("You edit: '" + this.name + "'");
        retry = true;//J'initialise le retry a true
        /**
         * Je crée un evenement windowListener pour permettre a l'utilisateur de
         * fermé la fenêtre avec la croix rouge sans reboucler la page discount
         */
        this.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        retry = false;
                    }
                });
    }

    
    /**
     * Getter of the retry attribute
     * @return 
     */
    public boolean isRetry() {
        return retry;
    }

    public void setRetry(boolean retry) {
        this.retry = retry;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle1 = new javax.swing.JLabel();
        jLabelTitle2 = new javax.swing.JLabel();
        jLabelSubTitle = new javax.swing.JLabel();
        jTextFieldBulkPrice = new javax.swing.JTextField();
        jTextFieldBulkQuantity = new javax.swing.JTextField();
        jLabelBulkPrice = new javax.swing.JLabel();
        jLabelBulkQuantity = new javax.swing.JLabel();
        jButtonConfirm = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel_whichItem = new javax.swing.JLabel();
        jTextFieldNewPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel_show_item = new javax.swing.JPanel();
        jLabel_image = new javax.swing.JLabel();
        jButton_uploadfile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(373, 273));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelTitle1.setText("Add / Edit");
        getContentPane().add(jLabelTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 10, -1, -1));

        jLabelTitle2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelTitle2.setText("item discount");
        getContentPane().add(jLabelTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 35, -1, -1));

        jLabelSubTitle.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jLabelSubTitle.setText("Enter 0 for bulk price and bulk quantity to remove the discount.");
        getContentPane().add(jLabelSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));
        getContentPane().add(jTextFieldBulkPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 140, -1));
        getContentPane().add(jTextFieldBulkQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 140, -1));

        jLabelBulkPrice.setText("Bulk Price :");
        getContentPane().add(jLabelBulkPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        jLabelBulkQuantity.setText("Bulk Quantity :");
        getContentPane().add(jLabelBulkQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        jButtonConfirm.setText("Confirm");
        jButtonConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConfirmMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonConfirmMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonConfirmMouseExited(evt);
            }
        });
        jButtonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 80, 40));

        jButtonCancel.setText("Cancel");
        jButtonCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseExited(evt);
            }
        });
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 80, 40));

        jLabel_whichItem.setFont(new java.awt.Font("Lucida Bright", 0, 15)); // NOI18N
        jLabel_whichItem.setForeground(new java.awt.Color(255, 102, 51));
        jLabel_whichItem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel_whichItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 330, 20));
        getContentPane().add(jTextFieldNewPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 140, -1));

        jLabel1.setText("New Price :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, 20));

        jPanel_show_item.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_show_item.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jPanel_show_item.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel_show_item.add(jLabel_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 90, 90));

        getContentPane().add(jPanel_show_item, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 100, 100));

        jButton_uploadfile.setText("Upload a file");
        jButton_uploadfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_uploadfileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_uploadfileMouseExited(evt);
            }
        });
        jButton_uploadfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_uploadfileActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_uploadfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 110, -1));

        jLabel2.setText("Picture :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Action when the 'Confirm' button is pushed, it will edit price, bulk price and bulk quantity of 
     * an item.
     * @param evt 
     */
    private void jButtonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmActionPerformed
        
        try {

            Double newPrice; //Variable qui prend le nouveau prix entré par l'employé
            //Permet de tester si les champs remplis sont des valeurs compatible (double ou int)
            double blindage1;
            int blindage2;
            

            try {
                //Si le champs nouveau prix est rempli
                if (!jTextFieldNewPrice.getText().equals("") && !jTextFieldNewPrice.getText().equals(" ") && !jTextFieldNewPrice.getText().equals("   ")) {
                    //On parseDouble la valeur en String pour vérifier qu'il s'agisse bien d'une valeur compatible sinon catch
                    newPrice = Double.parseDouble(jTextFieldNewPrice.getText());
                    //Update le nouveau prix de l'item selectionné dans la base de donnée
                    itDAO.updatePrice(Integer.parseInt(idItem), newPrice);
                }
                //Si les deux champs bulk ne sont pas rempli
                if (jTextFieldBulkPrice.getText().equals("") && jTextFieldBulkQuantity.getText().equals("")) {
                    //On fait rien et on sort
                    
                } else {//Sinon
                    /**
                     * On test si : - les deux champs sont rempli ou si les valeurs des champs sont compatibles 
                     * Si erreur ca va dans catch
                     */
                    blindage1 = Double.parseDouble(jTextFieldBulkPrice.getText());
                    blindage2 = Integer.parseInt(jTextFieldBulkQuantity.getText());
                    //Update le discount
                    itDAO.updateDiscount(idItem, jTextFieldBulkPrice.getText(), jTextFieldBulkQuantity.getText());
                }
                
                    if(chemin.length() != 0) {
                        itDAO.updatePicture(Integer.parseInt(idItem), chemin);
                    }
                
                retry = false; // On set le retry a false pour ne pas reboucler car les valeurs rentrées sont compatibles
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, " - Veuillez rentrez des valeurs compatibles! \n" + 
                        " - Si vous voulez modifier la réduction, veuillez remplir les 2 champs bulk");
            }

            //Refresh the List of items and the text fields 
            jTextFieldBulkPrice.setText("");
            jTextFieldBulkQuantity.setText("");
            jTextFieldNewPrice.setText("");
            try {
                //Close the employee interface
                this.dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error : call of employee_Jframe in ItemDscount_JFrame");
            }

        } catch (Exception e) {
            System.out.println("Error pushing button 'confirm' in ItemDiscount_JFrame/ButtonConfirm");
            JOptionPane.showMessageDialog(this, "2 possible errors :\n"
                    + "1- You must filled the bulk price and quantity\n"
                    + "2- Decimal numbers have to be separeted by a '.' and not ','\n");

        }
    }//GEN-LAST:event_jButtonConfirmActionPerformed

    
    /**
     * Action when the 'Cancel' button is pushed, it will close the jDialog pane.
     * @param evt 
     */
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        try {
            //Close the discoount interface
            retry = false; //Set le retry a false pour ne pas reboucler quand on cancel
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : leaving of ItemDiscount_Jframe in ItemDscount_JFrame/ButtonCancel");
        }
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmMouseClicked
        jButtonConfirm.setForeground(new Color(102, 255, 51));
    }//GEN-LAST:event_jButtonConfirmMouseClicked

    private void jButtonConfirmMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmMouseEntered
        jButtonConfirm.setForeground(new Color(153, 255, 153));
    }//GEN-LAST:event_jButtonConfirmMouseEntered

    private void jButtonConfirmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfirmMouseExited
        jButtonConfirm.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButtonConfirmMouseExited

    private void jButtonCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseClicked
        jButtonCancel.setForeground(new Color(255, 51, 51));
    }//GEN-LAST:event_jButtonCancelMouseClicked

    private void jButtonCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseEntered
        jButtonCancel.setForeground(new Color(255, 153, 153));
    }//GEN-LAST:event_jButtonCancelMouseEntered

    private void jButtonCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseExited
        jButtonCancel.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButtonCancelMouseExited

    private void jButton_uploadfileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_uploadfileMouseEntered
        jButton_uploadfile.setForeground(new Color(255, 230, 153));
    }//GEN-LAST:event_jButton_uploadfileMouseEntered

    private void jButton_uploadfileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_uploadfileMouseExited
        jButton_uploadfile.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton_uploadfileMouseExited

    private void jButton_uploadfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_uploadfileActionPerformed
        //Instancie un objet jFileChooser pour parcourir et uploader une image
        //Et on instancie un filtre pour n'avoir que des images, ici au format png, jpg, et gif
        JFileChooser fileChosen = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image : jpg, png, gif", "jpg", "png", "gif");

        fileChosen.setCurrentDirectory(new File("C:\\Users\\zk942\\Pictures\\ItemPictures"));
        //On désactive les filtres par défaut
        //Et on ajoute notre filtre
        fileChosen.setAcceptAllFileFilterUsed(false);
        fileChosen.addChoosableFileFilter(filter);

        //On recupere dans result le int de si un fichier a été choisi
        int result = fileChosen.showSaveDialog(null);
        //Si un fichier a été choisi
        if (result == JFileChooser.APPROVE_OPTION) {

            //On initialise un objet File qui récupere le fichier choisi
            File selectedFile = fileChosen.getSelectedFile();
            //On récup en string le chemin du file choisi
            chemin = selectedFile.getAbsolutePath();
            //On instancie une imageicon en lui envoyant l'image d'une nouvelle imageicon avec les dimension voulu limité par le jlabel
            ImageIcon myImage = new ImageIcon(new ImageIcon(chemin).getImage().getScaledInstance(jLabel_image.getWidth(), jLabel_image.getHeight(), Image.SCALE_SMOOTH));
            //Enfin on recupere dans une nouvelle image icon, l'image temp redimensionné
            //ImageIcon newImageIcon = new ImageIcon(img_temp2);
            jLabel_image.setIcon(myImage); // On affiche sur le label
        } else {
            JOptionPane.showMessageDialog(null, "Vous n'avez choisi aucune image");
        }

    }//GEN-LAST:event_jButton_uploadfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemDiscount_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemDiscount_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemDiscount_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemDiscount_JDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ItemDiscount_JDialog dialog = new ItemDiscount_JDialog(new javax.swing.JFrame(), true, idItem, name, picture);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonConfirm;
    private javax.swing.JButton jButton_uploadfile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBulkPrice;
    private javax.swing.JLabel jLabelBulkQuantity;
    private javax.swing.JLabel jLabelSubTitle;
    private javax.swing.JLabel jLabelTitle1;
    private javax.swing.JLabel jLabelTitle2;
    private javax.swing.JLabel jLabel_image;
    private javax.swing.JLabel jLabel_whichItem;
    private javax.swing.JPanel jPanel_show_item;
    private javax.swing.JTextField jTextFieldBulkPrice;
    private javax.swing.JTextField jTextFieldBulkQuantity;
    private javax.swing.JTextField jTextFieldNewPrice;
    // End of variables declaration//GEN-END:variables
}
